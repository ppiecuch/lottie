#!/usr/bin/env python

Import("env")
Import("env_modules")

env_lottie = env_modules.Clone()

env_lottie.Prepend(CPPPATH=["."])
env_lottie.Prepend(CPPPATH=["thirdparty/rlottie/inc"])
env_lottie.Prepend(CPPPATH=["thirdparty/rlottie/src/lottie"])
env_lottie.Prepend(CPPPATH=["thirdparty/rlottie/src/vector"])
env_lottie.Prepend(CPPPATH=["thirdparty/rlottie/src/vector/freetype"])
env_lottie.Prepend(CPPPATH=["thirdparty/rlottie/src/vector/stb"])

env_lottie.Append(CPPDEFINES=["RLOTTIE_BUILD"])

sources = Glob("thirdparty/rlottie/src/lottie/*.cpp") \
    + Glob("thirdparty/rlottie/src/vector/*.cpp") \
    + Glob("thirdparty/rlottie/src/vector/stb/*.cpp") \
    + Glob("thirdparty/rlottie/src/vector/freetype/*.cpp")

if env["arch"] in ["arm"] or ("android_arch" in env and env["android_arch"] in ["armv7"]):
    sources += Glob("thirdparty/rlottie/src/vector/pixman/*.S")

sources += Glob("*.cpp")

# Compile as a static library
lib = env_lottie.Library("gd_lottie", sources)
# Add the library as a dependency of the final executable
env.Prepend(LIBS=[lib])
